{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 ~chop = \cf2 Array\cf0 .fill(~ezv_numbufs, \{\cf2 |i|\cf0 \
	\cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[i].index, \cf3 \\lo\cf0 , -34.dbamp, \cf3 \\hi\cf0 , -6.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
\});\
\
~chop = \cf2 Array\cf0 .newClear(4);\
~chop[0] = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[0].index, \cf3 \\hi\cf0 , -12.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
~chop[1] = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[1].index, \cf3 \\hi\cf0 , -12.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
~chop[2] = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[2].index, \cf3 \\hi\cf0 , -12.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
~chop[3] = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[3].index, \cf3 \\hi\cf0 , -12.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
\
~chop[3] = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_b[3].index, \cf3 \\lo\cf0 , -34.dbamp, \cf3 \\hi\cf0 , -12.dbamp], ~proc_g, \cf3 \\addToTail\cf0 );\
\
~chop[0].free;\
~chop[1].free;\
~chop[2].free;\
~chop[3].free;\
\
~chop[0].run(false);\
~chop[1].run(false);\
~chop[2].run(false);\
~chop[3].run(false);\
\
~chop[0].run(true);\
~chop[1].run(true);\
~chop[2].run(true);\
~chop[3].run(true);\
\
\
~ezv_buf_b[3].index\
\
\
~chop.do(\{\cf2 |syn|\cf0  syn.free;\});\
~chop.do(\{\cf2 |syn, i|\cf0  syn.set(\cf3 \\osclag\cf0 , 0.1 * i * 2);\});\
~chop.do(\{\cf2 |syn, i|\cf0  syn.set(\cf3 \\hi\cf0 , -30.dbamp);\});\
\
\
~chop[0].set(\cf3 \\hi\cf0 ,-14.dbamp);\
~chop[1].set(\cf3 \\hi\cf0 ,-24.dbamp);\
~chop[2].set(\cf3 \\hi\cf0 ,-8.dbamp);\
~chop[3].set(\cf3 \\hi\cf0 ,-34.dbamp);\
\
~chop[0].set(\cf3 \\tune\cf0 , 1.0);\
~chop[1].set(\cf3 \\tune\cf0 , 2.0);\
~chop[2].set(\cf3 \\tune\cf0 , 1.0);\
~chop[3].set(\cf3 \\tune\cf0 , 0.5);\
~chop[0].set(\\osc_amp, 0.25);\
~chop[1].set(\\osc_amp, 0.35)\
~chop[2].set(\\osc_amp, 0.45)\
~chop[3].set(\\osc_amp, 0.15)\
\
~chop.do(\{\cf2 |syn|\cf0  syn.set(\cf3 \\lo\cf0 , -30.dbamp, \cf3 \\hi\cf0 , -6.dbamp);\});\
\
~chop0.free;\
~chop1.free;\
~chop2.free;\
~chop3.free;\
\
~chop = \cf2 Synth\cf0 .new(\cf3 \\sine_chop\cf0 , [\cf3 \\bus\cf0 , ~ezv_buf_master_b.index, \cf3 \\lo\cf0 , -34.dbamp, \cf3 \\hi\cf0 , -26.dbamp], ~ezv_buf_master_p, \cf3 \\addBefore\cf0 );\
~proc_g, \cf3 \\addToTail\cf0 );\
~chop.set(\cf3 \\hi\cf0 , -16.dbamp);\
~chop.set(\cf3 \\osclag\cf0 , 0.1);\
~chop.free;\
\
~ezv_buf_b[0]\
~ezv_buf_b[1]\
~ezv_buf_b[2]\
~ezv_buf_b[3]\
\
\cf4 /*\
\
Server.internal.queryAllNodes\
\
*/\cf0 \
}