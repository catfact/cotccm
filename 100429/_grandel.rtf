{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 s = \cf2 Server\cf0 .internal;\
s.waitForBoot \{ \cf2 Routine\cf0  \{\
\
	\cf2 SynthDef\cf0 .new(\cf3 \\patch\cf0 , \{\cf2 arg\cf0  in, out, amp=1.0, amplag=1.0;\
		amp = \cf2 Lag\cf0 .kr(amp, amplag);\
		\cf2 Out\cf0 .ar(out, \cf2 In\cf0 .ar(in) * amp);\
	\}).store;\
	\
	\
	\cf2 SynthDef\cf0 .new(\cf3 \\adc\cf0 , \{\cf2 arg\cf0  in, out, amp=1.0, amplag=1.0;\
		amp = \cf2 Lag\cf0 .kr(amp, amplag);\
		\cf2 Out\cf0 .ar(out, \cf2 SoundIn\cf0 .ar(in) * amp);\
	\}).store;\
	\
		\
	\cf2 SynthDef\cf0 .new(\cf3 \\fb_rlpf\cf0 , \{\
		\cf2 arg\cf0  in=0, out=0,\
			amp=0.125, hz=5000, rq=0.5,\
			amplag=0.1, hzlag=0.1, rqlag=0.1;\
			\
		\cf2 var\cf0  sig;\
		\
		amp = \cf2 Lag\cf0 .kr(amp, amplag);\
		hz= \cf2 Lag\cf0 .kr(hz, hzlag);\
		rq = \cf2 Lag\cf0 .kr(rq, rqlag);\
		\
		sig = \cf2 InFeedback\cf0 .ar(in, 1);\
		sig = \cf2 RLPF\cf0 .ar(sig, hz, rq);\
		\
		\cf2 Out\cf0 .ar(out, sig * amp);\
	\}).store;\
	\
	s.sync;\
	\
	~gran_g = \cf2 Group\cf0 .new(s);\
	~in_g = \cf2 Group\cf0 .before(~gran_g);\
	~out_g = \cf2 Group\cf0 .after(~gran_g);\
	\
	~gran_in_b = \cf2 Array\cf0 .fill(6, \{ \cf2 Bus\cf0 .audio(s, 1); \});\
	~gran_out_b = \cf2 Array\cf0 .fill(6, \{ \cf2 Bus\cf0 .audio(s, 1); \});\
	\
	~in_s = \cf2 Array\cf0 .fill(6, \{ \cf2 arg\cf0  i; \cf2 Synth\cf0 .new(\cf3 \\adc\cf0 , [\cf3 \\in\cf0 , 1, \cf3 \\out\cf0 , ~gran_in_b[i].index], ~in_g); \});\
	~out_s = \cf2 Array\cf0 .fill(6, \{ \cf2 arg\cf0  i; \cf2 Synth\cf0 .new(\cf3 \\patch\cf0 , [\cf3 \\in\cf0 , ~gran_out_b[i].index, \cf3 \\out\cf0 , i % 2, \cf3 \\amp\cf0 , 0.0], ~out_g); \});\
	\
	~gran = \cf2 Array\cf0 .fill (6, \{ \cf2 arg\cf0  i;\
		\cf2 Grandel\cf0 .new(s, ~gran_in_b[i].index, ~gran_out_b[i].index, ~gran_g, \cf3 \\addToTail\cf0 );\
	\});\
	\
	0.01.wait;\
	\
	~gran[0].rate = 0.5;\
	~gran[0].dur = 8.0;\
	~gran[0].wait = 1.5;\
	~gran[0].attack = 0.25;\
	~gran[0].release = 0.25;\
	~gran[0].deltime = 2.0;\
\
	~gran[1].rate = 0.5;\
	~gran[1].dur = 3.0;\
	~gran[1].wait = 0.25;\
	~gran[1].attack = 0.25;\
	~gran[1].release = 0.25;\
	~gran[1].deltime = 0.5;\
\
	~gran[2].rate = 1.0;\
	~gran[2].dur = 8.0;\
	~gran[2].wait = 1.5;\
	~gran[2].attack = 0.25;\
	~gran[2].release = 0.25;\
	~gran[2].deltime = 2.0;\
\
	~gran[3].rate = 1.0;\
	~gran[3].dur = 3.0;\
	~gran[3].wait = 0.25;\
	~gran[3].attack = 0.25;\
	~gran[3].release = 0.25;\
	~gran[3].deltime = 0.5;\
	\
	~gran[4].rate = 2.0;\
	~gran[4].dur = 8.0;\
	~gran[4].wait = 1.5;\
	~gran[4].attack = 0.25;\
	~gran[4].release = 0.25;\
	~gran[4].deltime = 2.0;\
\
	~gran[5].rate = 2.0;\
	~gran[5].dur = 3.0;\
	~gran[5].wait = 0.25;\
	~gran[5].attack = 0.25;\
	~gran[5].release = 0.25;\
	~gran[5].deltime = 0.5;\
\
	~fb = \cf2 Array\cf0 .fill(6, \{ \cf2 arg\cf0  i;\
		\cf2 Synth\cf0 .new(\cf3 \\fb_rlpf\cf0 , [\
			\cf3 \\in\cf0 , ~gran_out_b[i].index,\
			\cf3 \\out\cf0 , ~gran_in_b[(i+1) % 6].index,\
			\cf3 \\amp\cf0 , 0.0,\
			\cf3 \\amplag\cf0 , 4.0,\
			\cf3 \\rqlag\cf0 , i + 1,\
			\cf3 \\hzlag\cf0 , (i*2) + 1,\
			\cf3 \\hz\cf0 , 800 * (1.5 ** i),\
			\cf3 \\rq\cf0 , 0.4\
		], ~in_g, \cf3 \\addBefore\cf0 );\
	\});\
	\
	\
	~fb.do(\{\cf2 arg\cf0  syn;\
		syn.set(\cf3 \\amp\cf0 , -24.dbamp);\
		syn.set(\cf3 \\rq\cf0 , 0.8);\
	\});\
	\
	\
	\cf4 ///////// hid and gui\cf0 \
	\cf2 Routine\cf0  \{\
	w = \cf2 SCWindow\cf0 .new(\cf5 "_"\cf0 );\
	w.front;\
	\
	~switch = 0;\
	~switchtap = \cf2 CfTapper\cf0 .new;\
	\
	\cf2 GeneralHID\cf0 .buildDeviceList;\
	~hid_dev  = \cf2 GeneralHID\cf0 .deviceList;\
	\cf2 GeneralHID\cf0 .postDevices;\
			\
	~pad = \cf2 GeneralHID\cf0 .open( \cf2 GeneralHID\cf0 .findBy(0x07B5) );\
	~pad.debug_( \cf2 true\cf0  );\
	 \
	 0.1.wait;\
	 postln(\cf5 "yah"\cf0 );\
	 \
	 ~pad.makeGui;\
	 \
	~pad_spec = \cf2 GeneralHIDSpec\cf0 .new( ~pad );\
	~pad_spec.add(\cf3 \\switch\cf0 , [1, 7]);\
	\
	~pad_spec.map.postcs;\
	\
	~pad_spec;\
	\
	~pad_spec.action_(\cf3 \\switch\cf0 , \{ \cf2 arg\cf0  slot; \
		\cf5 "footswitch"\cf0 .postln;\
		if(slot.value > 0, \{\
			postln(\cf5 "press"\cf0 );\
			~switchtap.tap;\
		\}, \{\
			postln(\cf5 "lift"\cf0 );\
			if(~switch > 0, \{\
				postln(\cf5 "turning off"\cf0 );\
				~out_s.do(\{ \cf2 arg\cf0  syn;\
					syn.set(\cf3 \\amplag\cf0 , ~switchtap.now);\
					syn.set(\cf3 \\amp\cf0 , 0.0);\
				\});\
				~switch = 0;\
				\{ w.view.background = \cf2 Color\cf0 .black; \}.defer;\
			\}, \{\
				postln(\cf5 "turning on"\cf0 );\
				~out_s.do(\{ \cf2 arg\cf0  syn;\
					syn.set(\cf3 \\amplag\cf0 , ~switchtap.now);\
					syn.set(\cf3 \\amp\cf0 , 0.2);\
				\});\
				~switch = 1;\
				\{ w.view.background = \cf2 Color\cf0 .red; \}.defer;\
			\});\
		\});\
	\});\
	\
	\cf2 GeneralHID\cf0 .startEventLoop;\
	\}.play(\cf2 AppClock\cf0 );\
	\cf4 //////\cf0 \
	\
\}.play; \};	\
\
\
\cf4 /*\
~gran_in_b[0].scope;\
~gran_out_b[0].scope;\
*/}