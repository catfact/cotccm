{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 s = \cf3 Server\cf2 .internal.boot;\
\
~buflen = 8.0;\
~buf = \cf3 Buffer\cf2 .alloc(s, s.sampleRate * ~buflen);\
~delaybuf = \cf3 Buffer\cf2 .alloc(s, s.sampleRate * ~buflen);\
\
~rec = \cf3 Synth\cf2 .new(\cf4 \\record_adc\cf2 , [\cf4 \\buf\cf2 , ~buf.bufnum], s);\
~rec.free;\
\
~buf.plot;\
\
~loop = \cf3 Synth\cf2 .new(\cf4 \\sampleloop\cf2 , [\cf4 \\buf\cf2 , ~buf.bufnum, \cf4 \\delayBuf\cf2 , ~delaybuf.bufnum, \cf4 \\loopTime\cf2 , 1.0, \cf4 \\fadeTime\cf2 , 0.1], s);\
~loop.set(\cf4 \\level\cf2 , -4.dbamp);\
\
~loop.set(\cf4 \\loopTime\cf2 , 2.0);\
~loop.set(\cf4 \\fadeRatio\cf2 , 0.01);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 1);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 2);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 3);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 4);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 5);\
~loop.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 6);\
\
~loop.trace\
\
~loop.set(\cf4 \\resetTrigger\cf2 , 0);\
~loop.set(\cf4 \\resetTrigger\cf2 , 1);\
\
\
~loop2 = \cf3 Synth\cf2 .new(\cf4 \\sampleloop\cf2 , [\cf4 \\buf\cf2 , ~buf.bufnum, \cf4 \\delayBuf\cf2 , ~delaybuf.bufnum, \cf4 \\loopTime\cf2 , 1.0, \cf4 \\fadeBegin\cf2 , 0.1, \cf4 \\fadeEnd\cf2 , 0.1], s);\
~loop2.set(\cf4 \\level\cf2 , 4.dbamp);\
~loop2.set(\cf4 \\loopTime\cf2 , 2.0);\
~loop2.set(\cf4 \\offsetSamps\cf2 , s.sampleRate * 2.0);\
~loop2.set(\cf4 \\fadeTime\cf2 , 1.0);\
~loop2.set(\cf4 \\rate\cf2 , 0.5);\
~loop2.set(\cf4 \\timeScale\cf2 , 1.0);\
\
~loop.set(\cf4 \\resetTrigger\cf2 , 0);\
~loop.set(\cf4 \\resetTrigger\cf2 , 1);\
\
\
\
~loop2.set(\cf4 \\resetTrigger\cf2 , 0);\
~loop2.set(\cf4 \\resetTrigger\cf2 , 1);\
\
\
\
\cf3 SynthDef\cf2 .new(\cf4 \\teste\cf2 , \{\
	\cf3 arg\cf2  out=0, buf=0, delayBuf=1,\
		level=1.0, rate=1.0,\
		loopTime=1.0, fadeTime=0.0,\
		resetTrigger=0.0, offsetSamps=0, offsetRamp=1.0;\
	\
	\cf3 var\cf2  phaseA, phaseB, playA, playB, envA, envB, output, loopSamps;\
	\
	phaseA = \cf3 Phasor\cf2 .ar(trig:\cf3 K2A\cf2 .ar(resetTrigger), rate:rate, start:0, end:loopTime * 2 * \cf3 SampleRate\cf2 .ir * rate);\
	phaseB = \cf3 BufDelayL\cf2 .ar(delayBuf, phaseA, loopTime);\
	\cf3 Out\cf2 .ar(out, [phaseA / (loopTime * \cf3 SampleRate\cf2 .ir) * 0.5, phaseB / (loopTime * \cf3 SampleRate\cf2 .ir) * 0.5]);\
\}).send(s);\
\
b = \cf3 Bus\cf2 .audio(s, 2);\
~delbuf = \cf3 Buffer\cf2 .alloc(s, s.sampleRate * 10.0, 1);\
\
x = \cf3 Synth\cf2 .new(\cf4 \\teste\cf2 , [\cf4 \\fadeTime\cf2 , 1.0, \cf4 \\out\cf2 , b.index, \cf4 \\delayBuf\cf2 , ~delbuf.bufnum], s)\
\
x.set(\cf4 \\loopTime\cf2 , 4.0);\
\
b.scope}