{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 s = \cf3 Server\cf2 .default;\
s.boot;\
s.waitForBoot \{ \cf3 Routine\cf2  \{\
	\
	\cf3 SynthDef\cf2 .new(\cf4 \\cubicMapVoice\cf2 , \{\
		\cf3 arg\cf2  buf, out=0, level=1.0,\
			atk=0.001, rel=0.1, gate=1,\
			hz=110, oct=1, a=3.4,\
			lpf_hz_mul=2, lpf_hz_add=0;\
		\cf3 var\cf2  x, y, duty, env, output;\
		\cf5 //duty = SampleRate.ir / hz / oct;\cf2 \
		duty = 1.0 / (hz * oct);\
		x = \cf3 Dbufrd\cf2 (buf);\
		x = (a*x*x*x) + ((1.0-a)*x);\
		y = \cf3 Dbufwr\cf2 (x, buf);\
		env = \cf3 EnvGen\cf2 .ar(\cf3 Env\cf2 .asr(atk, 1.0, rel), gate:gate, doneAction:2);\
		output = \cf3 Duty\cf2 .ar(duty, 0, y);\
		output = \cf3 LPF\cf2 .ar(output, hz * lpf_hz_mul + lpf_hz_add);\
		\cf3 Out\cf2 .ar(out, (env * output * level).dup);	\
	\}).send(s);\
\
	~nvoices = 8;\
	~ival = 0.77;\
\
	~cubicmapbufs = \cf3 Array\cf2 .fill(~nvoices, \{\
		\cf3 Buffer\cf2 .alloc(s, 1, 1);\
	\});\
	\
	0.02.wait;\
	\
	~cubicmapbufs.do(\{ \cf3 arg\cf2  buf; buf.set(0, ~ival); \});\
	\
	x = \cf3 Synth\cf2 .new(\cf4 \\cubicMapVoice\cf2 , [\cf4 \\buf\cf2 , ~cubicmapbufs[0].bufnum]);\
	x.set(\cf4 \\a\cf2 , 3.05);\
	x.set(\cf4 \\oct\cf2 , 2);\
	\
	~cubicmapbufs[0].set(0, 0.8);	\
		\
\}.play; \};\
\
}