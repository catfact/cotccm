Routine {

	SynthDef.new(\rec, {
		arg in=0, buf=0,
		reclevel=1.0, prelevel=0.0, offset=0.0, trig=1.0, loop=0, run=1,
		atk=0.01, rel=0.01, gate=1;
		
		RecordBuf.ar(In.ar(in, 1),
			bufnum: buf, 
			offset:0,
			recLevel:reclevel,
			preLevel:prelevel,
			run:run,
			loop:loop,
			trigger:trig
		);
	}).send(s);

	/// length
	~frLen = 8.0;
	/// count
	~frN = 8;
	// bufs
	~frBuf = Array.fill(~frN, { Buffer.alloc(s, s.sampleRate * ~frLen); });  
	/// synths
	~frRec = Array.fill(~frN, { |i|
		Synth.new(\rec, [
			\in, c.in_b.index,
			\buf, ~frBuf[i].bufnum,
		], c.ig, \addAfter).run(false);
	});
	
	/// recording function, args are index and T/F
	~frz_rec = { arg n, val;
		Routine {  // apply value and reset
			~frRec[n].run(val);
			s.sync;
			~frRec[n].set(\trig, 0);
			s.sync;
			~frRec[n].set(\trig, 1);
			if(val.not, {
				~frBuf[n].normalize;
			});
		}.play;
};

s.sync;


}.play;