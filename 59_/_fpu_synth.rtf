{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 s = \cf2 Server\cf0 .local;\
\cf3 //s.boot;\cf0 \
\cf3 //s.freeAll;\cf0 \
s.freeAll;\
\
s.waitForBoot \{\
\
\cf2 SynthDef\cf0 .new(\cf4 \\vosc\cf0 , \{\
	\cf2 arg\cf0  out=0, hz=110, level=1.0,\
		buf=0, numbufs=4, \
		index=0.0, amplag=0.05, hzlag = 10.0,\
		gate=1, attack=0.1, release=60.0,\
		pan=0;\
	\cf2 var\cf0  osc, ampenv, amp;\
	hz = Lag.kr(hz, hzlag);\
	ampenv = \cf2 Env\cf0 .asr(attack, 1.0, release);\
	amp = \cf2 EnvGen\cf0 .ar(ampenv, gate:gate, doneAction:2);\
	index = \cf2 Lag\cf0 .kr(index, amplag);\
	osc = \cf2 VOsc\cf0 .ar(buf + (index * numbufs), hz);\
	\cf2 Out\cf0 .ar(out, \cf2 Pan2\cf0 .ar(osc*amp*level, pan));\
\}).send(s);\
\
	\
~vosc_bufs = \cf2 Buffer\cf0 .allocConsecutive\
(	4, s, 1024, 1,\
	\{	\cf2 arg\cf0  buf, i;\
			\cf2 var\cf0  sa;\
		sa = \cf2 Array\cf0 .fill\
		(	i+1,\
			\{	\cf2 arg\cf0  j;\
				\cf2 var\cf0  val;\
				if (j<i, \{val=0\}, \{val=1\});\
				val.postln\
			\}\
		);\
		buf.sine1Msg(sa);\
	\}\
);\
\
\cf2 SystemClock\cf0 .sched(10.0, \{\
\
~pitches = \cf2 Array\cf0 .fill(64, \{\cf2 |i|\cf0 \
	110 * ((i%7).wrap(1, 4)) / ((i% 8).wrap(1, 6)) + (i % 6) + (i/4096.0);\
\});\
\
~vg = \cf2 Group\cf0 .tail(s);\
\
~voscs = \cf2 Array\cf0 .fill(64, \{\cf2 |i|\cf0 \
	\cf2 Synth\cf0 .new(\cf4 \\vosc\cf0 , [\cf4 \\level\cf0 , 0.01, \cf4 \\hz\cf0 , ~pitches[i], \cf4 \\attack\cf0 , 30.0], ~vg); \
\});\
\
\cf3 //~voscs.do(\{arg syn; syn.free;\});\cf0 \
\
~vg.set(\cf4 \\lag\cf0 , 10.0);\
~vg.set(\cf4 \\lag\cf0 , 0.1);\
~vg.set(\cf4 \\index\cf0 , 0.0);\
~vg.set(\cf4 \\level\cf0 , 0.011);\
\
~voscs.do(\{\cf2 |syn, i|\cf0  syn.set(\cf4 \\pan\cf0 , i / 128 - 0.25)\});\
\
\cf3 //~vg.run(true);\cf0 \
\
\cf2 nil\cf0 ; \}); \cf3 // sched\cf0 \
\
\}; \cf3 //waitforboot}