{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 //w = SCWindow("_", Rect(100, 100, 640, 480));\cf3 \
\cf2 //w.view.background = Color.new(0.0, 0.0, 0.0);\cf3 \
\
~squares = \cf4 List\cf3 .new;\
~colors = \cf4 List\cf3 .new;\
\
w.drawHook =  \{\
	~squares.do(\{\
		\cf4 arg\cf3  square, i; \cf2 // list: a rect and a color\cf3 \
		\cf4 Pen\cf3 .fillColor = ~colors[i.wrap(0, ~colors.size - 1)];\
		\cf4 Pen\cf3 .fillRect(square);\
	\});\
\};\
\
~colors = \cf4 List\cf3 .with(\cf4 Color\cf3 .black, \cf4 Color\cf3 .white, \cf4 Color\cf3 .black);\
5.do(\{ \cf4 |i|\cf3  ~colors = ~colors.add(\cf4 Color\cf3 .new(i/4,i/4,i/4));\});\
~rot = 1;\
\
w.front;\
~run = \cf4 true\cf3 ;\
\
~wait = 0.01;\
~max_size = 2;\
\
~growflag = \cf4 false\cf3 ;\
\
\cf2 // should use a coupled map\cf3 \
~x = 0.77;\
~y = 0.77;\
~a = 3.999;\
~b = 3.999;\
\
\{ while \{~run\} \{\
	\cf4 var\cf3  size;\
	\cf4 var\cf3  x, y;\
	~colors = ~colors.rotate(~rot);\
	size = ~max_size.rand + 1;\
	if (~squares.size > 3200 && ~growflag, \{~growflag = \cf4 false\cf3 ; \});\
	if (~growflag, \{ \cf2 // should do more interesting distro here, chaotic func w long orbit\cf3 \
	\cf2 // ok try this\cf3 \
		if (~x.abs > 0.5, \{x = ~x.abs - 0.5;\}, \{x = ~x.abs + 0.5;\});\
		if (~y.abs > 0.5, \{y = ~y.abs - 0.5;\}, \{y = ~y.abs + 0.5;\});\
		x = x * (640 - size);\
		y = y * (480 - size);\
		\cf2 //("("++x++","++y++")").postln;\cf3 \
\cf2 //		~x = (~a * (~x * ~x * ~x)) + (1.0 - ~a) * ~x;\cf3 \
\cf2 //		~y = (~b * (~y * ~y * ~y)) + (1.0 - ~b) * ~y;\cf3 \
		~x = ~x * ~a * (1.0 - ~x);\
		~y = ~y * ~b * (1.0 - ~y);\
		~squares = ~squares.add(\cf4 Rect\cf3 (x, y, size, size)); \});\
	\cf2 //	~squares = ~squares.add(Rect((800 - size).rand, (600-size).rand, size, size)); \});\cf3 \
\cf2 //	~colors.postln;\cf3 \
	w.refresh;\
	~wait.wait;\
\}\}.fork(\cf4 AppClock\cf3 );\
\
w.onClose = \{ ~run = \cf4 false\cf3 ; \};\
\
\cf4 SystemClock\cf3 .sched(1.0, \{~x=0.77; ~y=0.88; \cf4 nil\cf3 \});\
\cf2 /*\
AppClock.clear;\
SystemClock.clear;\
\
*/}