{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 s = \cf3 Server\cf2 .local;\
s.boot;\
\
\cf3 SynthDef\cf2 .new(\cf4 \\vosc\cf2 , \{\
	\cf3 arg\cf2  out=0, hz=110, level=1.0,\
		buf=0, numbufs=4, \
		index=0.0, lag=0.05,\
		gate=1, attack=0.1, release=0.1,\
		pan=0;\
	\cf3 var\cf2  osc, ampenv, amp;\
	ampenv = \cf3 Env\cf2 .asr(attack, 1.0, release);\
	amp = \cf3 EnvGen\cf2 .ar(ampenv, gate:gate, doneAction:2);\
	index = \cf3 Lag\cf2 .kr(index, lag);\
	osc = \cf3 VOsc\cf2 .ar(buf + (index * numbufs), hz);\
	\cf3 Out\cf2 .ar(out, \cf3 Pan2\cf2 .ar(osc*amp*level, pan));\
\}).send(s);\
\
	\
~vosc_bufs = \cf3 Buffer\cf2 .allocConsecutive\
(	4, s, 1024, 1,\
	\{	\cf3 arg\cf2  buf, i;\
			\cf3 var\cf2  sa;\
		sa = \cf3 Array\cf2 .fill\
		(	i+1,\
			\{	\cf3 arg\cf2  j;\
				\cf3 var\cf2  val;\
				if (j<i, \{val=0\}, \{val=1\});\
				val.postln\
			\}\
		);\
		buf.sine1Msg(sa);\
	\}\
);\
\
~pitches = \cf3 Array\cf2 .fill(64, \{\cf3 |i|\cf2 \
	110 * ((i%7).wrap(1, 4)) / ((i% 8).wrap(1, 6)) + (i %4);\
\});\
\
~vg = \cf3 Group\cf2 .tail(s);\
\
~voscs = \cf3 Array\cf2 .fill(64, \{\cf3 |i|\cf2 \
	\cf3 Synth\cf2 .new(\cf4 \\vosc\cf2 , [\cf4 \\level\cf2 , 0.01, \cf4 \\hz\cf2 , ~pitches[i]], ~vg); \
\})\
\
~voscs.do(\{\cf3 arg\cf2  syn; syn.free;\});\
\
~vg.set(\cf4 \\lag\cf2 , 10.0);\cf0 \
~vg.set(\cf5 \\lag\cf0 , 0.1);\cf2 \
~vg.set(\cf4 \\index\cf2 , 0.0);}